
# --- VALUE EXPR ---

FnValExpr <- KeywordFn Binding? LParen ( ValExpr )* RParen TypeExpr Yields ValExpr

LoopValExpr <- KeywordLoop LabelBinding? ValExpr

RetValExpr <- KeywordRet LabelReference ValExpr

# --- COMMENTS + ATTRIBUTES ---

Metadata <- ( Comment / Attribute )*

Comment 
    <- WordComment
     / LineComment
     / MultilineComment

WordComment
    <- "# " [^\n]* Spacing

LineComment
    <- "#" [A-Za-z_][A-Za-z0-9_] Spacing 

NotMultiLineComment 
    <- (!"#{" !"}#" .) 

MultilineComment 
    <- "#{" (NotMultiLineComment / MultilineComment)* "}#" Spacing

Attribute
    <- WordAttribute
     / LineAttribute
     / MultilineAttribute

WordAttrbute
    <- "$ " [^\n]* Spacing

LineAttrbute
    <- "$" [A-Za-z_][A-Za-z0-9_] Spacing 

NotMultiLineAttrbute 
    <- (!"${" !"}$" .) 

MultilineAttrbute 
    <- "${" (NotMultiLineAttrbute / MultilineAttrbute)* "}$" Spacing


# --- MACROS ---

MacroExpr <- MacroIdentifier LParen RParen

# --- LABELS + REFERENCES ---

Label <- "'" Identifier

LabelReference <- Label 
LabelBinding <- Label

NamespaceBinding <- Identifier
NamespaceReference <- ( Identifier OpModModAccess Spacing )* Identifier

Reference <- (NamespaceReference OpConcreteModAccess)? Identifier
Binding <- Identifier

Identifier <- !AnyKeyword [A-Za-z_] [A-Za-z0-9_]* Spacing
MacroIdentifier <- [A-Za-z_][A-Za-z0-9_]*"!" Spacing

# --- LITERALS ---

hex <- [0-9a-fA-F]
hex_ <- ('_'/hex)
dec <- [0-9]
dec_ <- ('_'/dec)

dec_int <- dec (dec_* dec)?
hex_int <- hex (hex_* dec)?

FloatLiteral
    <- "0x" hex_* hex "." hex_int ([pP] [-+]? hex_int)? Spacing
     /      dec_int   "." dec_int ([eE] [-+]? dec_int)? Spacing
     / "0x" hex_* hex "."? [pP] [-+]? hex_int Spacing
     /      dec_int   "."? [eE] [-+]? dec_int Spacing

IntLiteral
    <- "0b" [_01]*  [01]  Spacing
     / "0o" [_0-7]* [0-7] Spacing
     / "0x" hex_* hex Spacing
     /      dec_int   Spacing

CharUnit
    <- "\\x" hex hex
     / "\\" [nr\\t'"]
     / [^\\'\n]

CharLiteral <- "'" CharUnit "'" Spacing

StringUnit
    <- char_escape
     / "\\u{" hex hex hex hex "}"
     / [^\\"\n]

SingleStringLiteral 
    <- "\"" StringUnit* "\"" Spacing

StringLiteral
    <- SingleStringLiteral SingleStringLiteral*

# --- Symbols + Operators---

OpModModAccess          <- Slash
OpDiv <- Slash

OpRef                   <- "&"                Spacing
OpMul                   <- "*"      ![%=]     Spacing
OpMulAssign             <- "*="               Spacing
Def                     <- ":"      ![:=]     Spacing
OpConcreteModAccess     <- "::"               Spacing
OpSemi                  <- ";"                Spacing
OpProduct               <- ","                Spacing
OpFieldAccess           <- "."      ![.]      Spacing
OpDestructureRemainder  <- ".."               Spacing
OpAssign                <- "="      ![>=]     Spacing
OpEqual                 <- "=="               Spacing
Define                  <- ":="               Spacing
Yields                  <- "=>"               Spacing
OpNotEqual              <- "!="               Spacing
OpLess                  <- "<"      ![=]      Spacing
OpLessEqual             <- "<="               Spacing
LBrace                  <- "{"                Spacing
LBracket                <- "["      ![*]      Spacing
LParen                  <- "("                Spacing
OpSub                   <- "-"      ![%=>]    Spacing
OpSubAssign             <- "-="               Spacing
OpRemainder             <- "%"      ![=]      Spacing
OpRemainderAssign       <- "%="               Spacing
OpCoproduct             <- "|"      ![>]      Spacing
OpPipe                  <- "|>"               Spacing
OpAdd                   <- "+"      ![%+=]    Spacing
OpAddAssign             <- "+="               Spacing
OpGreater               <- ">"      ![=]      Spacing
OpGreaterEqual          <- ">="               Spacing
RBrace                  <- "}"                Spacing
RBracket                <- "]"                Spacing
RParen                  <- ")"                Spacing
Slash                   <- "/"      ![=]      Spacing
OpDivEqual              <- "/="               Spacing

# --- KEYWORDS ---

WordEnd <- ![a-zA-Z0-9_] Spacing

KeywordLoop      <- "loop"     WordEnd
KeywordMatch     <- "match"    WordEnd
KeywordVal       <- "val"      WordEnd
KeywordRet       <- "ret"      WordEnd
KeywordDefer     <- "defer"    WordEnd
KeywordFn        <- "fn"       WordEnd
KeywordPat       <- "pat"      WordEnd
KeywordAs        <- "as"       WordEnd
KeywordType      <- "type"     WordEnd
KeywordTypefn    <- "typefn"   WordEnd
KeywordStruct    <- "struct"   WordEnd
KeywordEnum      <- "enum"     WordEnd
KeywordDyn       <- "dyn"      WordEnd
KeywordMod       <- "mod"      WordEnd
KeywordUse       <- "use"      WordEnd
KeywordTrue      <- "true"     WordEnd
KeywordFalse     <- "false"    WordEnd
KeywordAnd       <- "and"      WordEnd
KeywordOr        <- "or"       WordEnd
KeywordNot       <- "not"      WordEnd
KeywordNil       <- "nil"      WordEnd
KeywordNever     <- "never"    WordEnd

AnyKeyword <-   
KeywordLoop      \
KeywordMatch     \
KeywordVal       \
KeywordRet       \
KeywordDefer     \
KeywordFn        \
KeywordPat       \
KeywordAs        \
KeywordType      \
KeywordTypefn    \
KeywordStruct    \
KeywordEnum      \
KeywordDyn       \
KeywordMod       \
KeywordUse       \
KeywordTrue      \
KeywordFalse     \
KeywordAnd       \
KeywordOr        \
KeywordNot       \
KeywordNil       \
KeywordNever     

# --- WHITESPACE ---

Spacing <- [ \t\n]*
